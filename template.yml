AWSTemplateFormatVersion: 2010-09-09
Description: >-
  TaskItemApi

Transform:
- AWS::Serverless-2016-10-31

Resources:
  # This is a Lambda function config associated with the source code: get-all-items.js
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the TaskItemTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TaskItemTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          TASK_ITEM_TABLE: !Ref TaskItemTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET

  # This is a Lambda function config associated with the source code: get-by-id.js
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the TaskItemTable
        - DynamoDBCrudPolicy:
            TableName: !Ref TaskItemTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          TASK_ITEM_TABLE: !Ref TaskItemTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET

  # This is a Lambda function config associated with the source code: put-item.js
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the TaskItemTable.
        - DynamoDBCrudPolicy:
            TableName: !Ref TaskItemTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          TASK_ITEM_TABLE: !Ref TaskItemTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  TaskItemTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
